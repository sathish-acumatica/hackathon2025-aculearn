// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnboardingBuddy.Data;

#nullable disable

namespace OnboardingBuddy.Migrations
{
    [DbContext(typeof(OnboardingDbContext))]
    [Migration("20250930231751_StoreFilesInDatabase")]
    partial class StoreFilesInDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnboardingBuddy.Models.FileUpload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("FileContent")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("FileSizeBytes")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ProcessedContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessingError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("UploadedAt");

                    b.ToTable("FileUploads");
                });

            modelBuilder.Entity("OnboardingBuddy.Models.TrainingMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("InternalNotes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("IsActive");

                    b.HasIndex("Title");

                    b.ToTable("TrainingMaterials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Training Materials",
                            Content = "<h2>Welcome to OnboardingBuddy</h2>\r\n<p>OnboardingBuddy is your AI-powered onboarding companion designed to make your first days smooth and successful.</p>\r\n\r\n<h3>Your Onboarding Checklist:</h3>\r\n<ol>\r\n<li><strong>IT Setup:</strong> Complete system access and security training</li>\r\n<li><strong>Company Overview:</strong> Learn about our mission and values</li>\r\n<li><strong>Role Training:</strong> Department-specific orientation</li>\r\n<li><strong>Team Integration:</strong> Meet your colleagues and stakeholders</li>\r\n<li><strong>Goal Setting:</strong> Establish your 30-60-90 day objectives</li>\r\n</ol>\r\n\r\n<h3>Key Resources:</h3>\r\n<ul>\r\n<li><strong>AI Assistant:</strong> Ask questions anytime for instant help</li>\r\n<li><strong>Training Materials:</strong> Access guides and documentation</li>\r\n<li><strong>Progress Tracking:</strong> Monitor your completion status</li>\r\n<li><strong>Team Directory:</strong> Connect with key contacts</li>\r\n</ul>\r\n\r\n<h3>Quick Tips:</h3>\r\n<p>💡 <strong>Ask Questions:</strong> Your AI assistant is available 24/7</p>\r\n<p>📋 <strong>Track Progress:</strong> Check off completed items</p>\r\n<p>🤝 <strong>Connect:</strong> Reach out to team members early</p>\r\n\r\n<p><strong>Need Help?</strong> Contact HR at hr@company.com</p>\r\n<p><em>Typical completion: 2-3 business days</em></p>",
                            CreatedAt = new DateTime(2025, 9, 30, 12, 0, 0, 0, DateTimeKind.Utc),
                            InternalNotes = "Primary onboarding guide - review monthly",
                            IsActive = true,
                            Title = "Onboarding Buddy Guide"
                        },
                        new
                        {
                            Id = 2,
                            Category = "System Prompts",
                            Content = "You are OnboardingBuddy, an enthusiastic AI onboarding assistant.\r\n\r\nCORE BEHAVIOR:\r\n- Be friendly, professional, and encouraging\r\n- Focus on onboarding tasks and company-related topics\r\n- Guide users through their checklist step-by-step\r\n- Ask follow-up questions to track progress\r\n- Provide clear next steps and deadlines\r\n\r\nCONVERSATION STYLE:\r\n- Welcome new employees warmly\r\n- Ask about their role to personalize guidance\r\n- Give specific, actionable advice\r\n- Check in regularly on task completion\r\n- Celebrate achievements and milestones\r\n\r\nFORMATTING INSTRUCTIONS:\r\n- Use <strong>bold text</strong> for important items, headings, and emphasis\r\n- Use <em>italic text</em> for notes, tips, and secondary information\r\n- Use <p> tags for paragraphs\r\n- Use bullet points with proper HTML formatting for lists\r\n- Format your responses with proper HTML structure for better readability\r\n\r\nWELCOME APPROACH:\r\n- Introduce yourself as their dedicated assistant\r\n- Ask about their role/department\r\n- Present the first concrete task (IT setup)\r\n- Set expectations for regular check-ins\r\n- Encourage questions and provide reassurance\r\n\r\nSTAY FOCUSED:\r\nIf asked about non-work topics, gently redirect: 'Let's focus on your onboarding success! How's your progress with [current task]?'\r\n\r\nRemember: Your goal is successful onboarding completion through consistent guidance and support. Always format your responses with HTML for better presentation.",
                            CreatedAt = new DateTime(2025, 9, 30, 12, 0, 0, 0, DateTimeKind.Utc),
                            InternalNotes = "Main AI behavior - concise version to avoid token limits",
                            IsActive = true,
                            Title = "AI Assistant Guidelines"
                        });
                });

            modelBuilder.Entity("OnboardingBuddy.Models.TrainingMaterialAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AttachedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("FileUploadId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingMaterialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileUploadId");

                    b.HasIndex("TrainingMaterialId");

                    b.ToTable("TrainingMaterialAttachments");
                });

            modelBuilder.Entity("OnboardingBuddy.Models.TrainingMaterialAttachment", b =>
                {
                    b.HasOne("OnboardingBuddy.Models.FileUpload", "FileUpload")
                        .WithMany("TrainingMaterialAttachments")
                        .HasForeignKey("FileUploadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnboardingBuddy.Models.TrainingMaterial", "TrainingMaterial")
                        .WithMany("Attachments")
                        .HasForeignKey("TrainingMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileUpload");

                    b.Navigation("TrainingMaterial");
                });

            modelBuilder.Entity("OnboardingBuddy.Models.FileUpload", b =>
                {
                    b.Navigation("TrainingMaterialAttachments");
                });

            modelBuilder.Entity("OnboardingBuddy.Models.TrainingMaterial", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
